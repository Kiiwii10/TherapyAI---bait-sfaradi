; /supervisord.conf

[supervisord]
nodaemon=true ; to run supervisor in foreground, required by Docker
logfile=/dev/null ; log to stdout/stderr
logfile_maxbytes=0
pidfile=/tmp/supervisord.pid

[program:flask_server]
; Use /bin/sh -c to allow shell expansion for environment variables
command=/bin/sh -c "exec gunicorn --bind 0.0.0.0:${PORT:-8000} --worker-class=gthread --workers=${GUNICORN_WORKERS:-2} --threads=${GUNICORN_THREADS:-4} --timeout=${GUNICORN_TIMEOUT:-300} --access-logfile - --error-logfile - app:app"
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
; PORT is usually set by Azure.
; GUNICORN_WORKERS, GUNICORN_THREADS, GUNICORN_TIMEOUT should be set in Azure App Service Application Settings.
; The :-default values here will act as fallbacks if the env vars are not set or are empty.

[program:celery_worker]
; Use /bin/sh -c to allow shell expansion for environment variables
command=/bin/sh -c "exec celery -A celery_app.celery worker -l info --concurrency=${CELERY_CONCURRENCY:-2} -E --pool=prefork"
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
; CELERY_CONCURRENCY should be set in Azure App Service Application Settings.
; The :-default value here will act as a fallback if the env var is not set or is empty.